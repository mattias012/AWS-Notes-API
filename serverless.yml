service: notes-api

provider:
  name: aws
  runtime: nodejs20.x
  region: ${env:REGION}
  iam:
    role: ${env:AWS_LAMBDA_ROLE_ARN}
  environment:
    NOTES_TABLE: ${env:NOTES_TABLE}
    USERS_TABLE: ${env:USERS_TABLE}
    JWT_SECRET: ${env:JWT_SECRET}

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: false
    exclude: ['aws-sdk']
    target: 'node20'
    platform: 'node'
    concurrency: 10

package:
  individually: true
  exclude:
    - node_modules/aws-sdk/**
    - node_modules/typescript/**
    - node_modules/@types/**
    - src/**/*.ts
    - .vscode/**
    - .env
    - tsconfig.json
    - package-lock.json

functions:
  getNotes:
    handler: src/handlers/getNotes/index.handler
    events:
      - http:
          path: api/notes
          method: get
          cors: true

  getNote:
    handler: src/handlers/getNote/index.handler
    events:
      - http:
          path: api/notes/{noteId}
          method: get
          cors: true

  createNote:
    handler: src/handlers/createNote/index.handler
    events:
      - http:
          path: api/notes
          method: post
          cors: true

  updateNote:
    handler: src/handlers/updateNote/index.handler
    events:
      - http:
          path: api/notes/{noteId}
          method: put
          cors: true

  deleteNote:
    handler: src/handlers/deleteNote/index.handler
    events:
      - http:
          path: api/notes/{noteId}
          method: delete
          cors: true

  signup:
    handler: src/handlers/signup/index.handler
    events:
      - http:
          path: api/user/signup
          method: post

  login:
    handler: src/handlers/login/index.handler
    events:
      - http:
          path: api/user/login
          method: post

  restoreNote:
    handler: src/handlers/restoreNote/index.handler
    events:
      - http:
          path: api/notes/{noteId}/restore
          method: put
          cors: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:USERS_TABLE}
        AttributeDefinitions:
          - AttributeName: "email"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "email"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
    
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:NOTES_TABLE}
        AttributeDefinitions:
          - AttributeName: "userId"
            AttributeType: "S"
          - AttributeName: "noteId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "userId"
            KeyType: "HASH"
          - AttributeName: "noteId"
            KeyType: "RANGE"
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: "ttl"  # attribute to store the expiration time
          Enabled: true         # time to live activated
